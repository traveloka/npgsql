# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- tvlk/4.0.11.tvlk

pr:
- tvlk/4.0.11.tvlk

pool:
  name: Default

variables:
  buildConfiguration: 'Release'
  projects: 'src/Npgsql*/*.csproj'

steps:
- task: DotNetCoreInstaller@2
  displayName: Install .NET Core 2.2.207 with 2.2.8 runtime
  inputs:
    packageType: 'sdk'
    version: '2.2.207'

- script: dotnet pack src/Npgsql/Npgsql.csproj -c ReleaseOptimizedCryptography
  displayName: Pack Npgsql
- script: dotnet pack src/Npgsql.Json.NET/Npgsql.Json.NET.csproj -c Release
  displayName: Pack Npgsql.Json.NET
- script: dotnet pack src/Npgsql.NodaTime/Npgsql.NodaTime.csproj -c Release
  displayName: Pack Npgsql.NodaTime
- script: dotnet pack src/Npgsql.LegacyPostgis/Npgsql.LegacyPostgis.csproj -c Release
  displayName: Pack Npgsql.LegacyPostgis
- script: dotnet pack src/Npgsql.RawPostgis/Npgsql.RawPostgis.csproj -c Release
  displayName: Pack Npgsql.RawPostgis
- script: dotnet pack src/Npgsql.NetTopologySuite/Npgsql.NetTopologySuite.csproj -c Release
  displayName: Pack Npgsql.NetTopologySuite

- task: DotNetCoreCLI@2
  displayName: Publish to azure packages
  inputs:
    command: 'push'
    packagesToPush: 'src/**/*.nupkg'
    feedPublish: 'tvlk-ecb'
